name: Pre-Release

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:

  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}
      plain-version: ${{ steps.out.outputs.plain-version }}

    steps:
      - uses: actions/checkout@v2

      - id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Number
        id: pr_number
        run: echo "::set-output name=nr::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"

      - name: Set version output
        id: out
        run: |
          echo "::set-output name=version::$(echo ${VERSION}-PRE-${{ steps.pr_number.outputs.nr }})"
          echo "::set-output name=plain-version::$(echo ${VERSION})"

  git-release:
    needs: ["generate-version"]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          prerelease: true
          title: ${{ needs.generate-version.outputs.version }}
  
  pre-release-kong:
    needs: ["git-release", "generate-version"]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Prepare values
        run: | 
          echo GITHUB_ORGANISATION: fiware >> values.yaml
          echo GITHUB_REPO: kong-plugins-fiware >> values.yaml
          echo VERSION: ${{ needs.generate-version.outputs.plain-version }} >> values.yaml


      - name: Parse rockspec
        run: |
          go install github.com/cbroglie/mustache/cmd/mustache@v1.3.1
          ~/go/bin/mustache values.yaml kong-plugin-auth-endpoint-config-ishare/rockspec.mustache > kong-plugin-auth-endpoint-config-ishare/kong-plugin-auth-endpoint-config-ishare-${{ needs.generate-version.outputs.plain-version }}-1.rockspec
          ~/go/bin/mustache values.yaml kong-plugin-ngsi-ishare-policies/rockspec.mustache > kong-plugin-ngsi-ishare-policies/kong-plugin-ngsi-ishare-policies-${{ needs.generate-version.outputs.plain-version }}-1.rockspec
      
      - uses: leafo/gh-actions-lua@v9
      - uses: leafo/gh-actions-luarocks@v4
      
      - name: Make rock
        run: |
          luarocks install lua-fiware-lib 0.0.4-1
          cd kong-plugin-auth-endpoint-config-ishare
          luarocks make --pack-binary-rock
          cd ..
          cd kong-plugin-ngsi-ishare-policies
          luarocks make --pack-binary-rock
          cd ..
          mkdir plugin-dir
          cp kong-plugin-auth-endpoint-config-ishare/kong-plugin-auth-endpoint-config-ishare-${{ needs.generate-version.outputs.plain-version }}-1.all.rock  plugin-dir/
          cp kong-plugin-ngsi-ishare-policies/kong-plugin-ngsi-ishare-policies-${{ needs.generate-version.outputs.plain-version }}-1.all.rock  plugin-dir/

      - name: Get dockerfiles
        run: |
          wget https://raw.githubusercontent.com/Kong/docker-kong/master/customize/Dockerfile

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: kong
          tags: ${{ github.sha }} ${{ needs.generate-version.outputs.version }}
          dockerfiles: |
            ./Dockerfile
          context: ./
          build-args: |
            KONG_BASE=kong:0.14.1-alpine
            ROCKS_DIR=./plugin-dir
