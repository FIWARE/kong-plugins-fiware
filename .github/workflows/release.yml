name: Release

on:
  push:
    branches:
      - main

jobs:


  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - id: pr
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.pr.outputs.labels }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION})"


  git-release:
    needs: ["generate-version"]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          title: ${{ needs.generate-version.outputs.version }}
          prerelease: false

  auth-endpoint-config-ishare:

    needs: [ "git-release", "generate-version" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Prepare values
        run: | 
          echo GITHUB_ORGANISATION: fiware >> values.yaml
          echo GITHUB_REPO: kong-plugins-fiware >> values.yaml
          echo VERSION: ${{ needs.generate-version.outputs.version }} >> values.yaml

      - name: Parse rockspec
        run: |
          go install github.com/cbroglie/mustache/cmd/mustache@v1.3.1
          ~/go/bin/mustache values.yaml kong-plugin-auth-endpoint-config-ishare/rockspec.mustache > kong-plugin-auth-endpoint-config-ishare-${{ needs.generate-version.outputs.version }}-1.rockspec
      
      - uses: leafo/gh-actions-lua@v9
      - uses: leafo/gh-actions-luarocks@v4


      - name: Upload rockspec
        run: |
          luarocks install dkjson
          luarocks upload --api-key=${{ secrets.API_KEY }} kong-plugin-auth-endpoint-config-ishare-${{ needs.generate-version.outputs.version }}-1.rockspec

  ngsi-ishare-policies:

    needs: [ "git-release", "generate-version" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Prepare values
        run: | 
          echo GITHUB_ORGANISATION: fiware >> values.yaml
          echo GITHUB_REPO: kong-plugins-fiware >> values.yaml
          echo VERSION: ${{ needs.generate-version.outputs.version }} >> values.yaml

      - name: Parse rockspec
        run: |
          go install github.com/cbroglie/mustache/cmd/mustache@v1.3.1
          ~/go/bin/mustache values.yaml kong-plugin-ngsi-ishare-policies/rockspec.mustache > kong-plugin-ngsi-ishare-policies-${{ needs.generate-version.outputs.version }}-1.rockspec
      
      - uses: leafo/gh-actions-lua@v9
      - uses: leafo/gh-actions-luarocks@v4


      - name: Upload rockspec
        run: |
          luarocks install dkjson
          luarocks upload --api-key=${{ secrets.API_KEY }} kong-plugin-ngsi-ishare-policies-${{ needs.generate-version.outputs.version }}-1.rockspec

  kong: 

    needs: ["git-release", "generate-version", "ngsi-ishare-policies", "auth-endpoint-config-ishare"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
    
      - name: Log into quay
        run: docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io

      - name: Get dockerfiles
        run: |
          wget https://raw.githubusercontent.com/Kong/docker-kong/master/customize/Dockerfile
          wget https://raw.githubusercontent.com/Kong/docker-kong/master/customize/empty_file
          wget https://raw.githubusercontent.com/Kong/docker-kong/master/customize/packer.lua

      - name: Build and push
        run: |
          docker build --build-arg KONG_BASE="kong:2.8.1-alpine" --build-arg PLUGINS="kong-plugin-auth-endpoint-config-ishare ${{ needs.generate-version.outputs.version }}-1,kong-plugin-ngsi-ishare-policies ${{ needs.generate-version.outputs.version }}-1" --tag quay.io/fiware/kong:${{ needs.generate-version.outputs.version }} .
          
          docker push quay.io/fiware/kong:${{ needs.generate-version.outputs.version }}