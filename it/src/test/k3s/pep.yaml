---
# Source: keycloak-pep/templates/configMap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: keycloak-pep
  name: keycloak-pep-config
data:
  application.properties: >

    server.connection-timeout=5000

    server.port=8080

    # Proxy config

    proxy.schema=http

    proxy.host=orion-ld

    proxy.port=1026

    # Keycloak PEP config

    keycloak.realm=fiware-server

    keycloak.auth-server-url=http://keycloak:80

    keycloak.ssl-required=external

    keycloak.disable-trust-manager=true

    keycloak.allow-any-hostname=true

    keycloak.resource=orion-pep

    keycloak.bearer-only=true

    keycloak.credentials.secret=978ad148-d99b-406d-83fc-578597290a79

    keycloak.securityConstraints[0].authRoles[0]=user

    keycloak.securityConstraints[0].securityCollections[0].name=protected

    keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/*

    keycloak.policy-enforcer-config.enforcement-mode=ENFORCING

    keycloak.policy-enforcer-config.claimInformationPointConfig.claims[http.uri]={request.relativePath}

    keycloak.policy-enforcer-config.claimInformationPointConfig.claims[http.method]={request.method}

    keycloak.policy-enforcer-config.claimInformationPointConfig.claims[http.fiware-service]={request.header['fiware-service']}

    keycloak.policy-enforcer-config.claimInformationPointConfig.claims[http.fiware-servicepath]={request.header['fiware-servicepath']}

    keycloak.policy-enforcer-config.path-cache-config.lifespan=5000

    # Logging configuration

    logging.level.root=TRACE

    logging.level.org.springframework.boot=TRACE

    logging.level.org.keycloak=DEBUG

    logging.level.org.apache.http=TRACE

    spring.main.banner-mode=OFF

    spring.freemarker.checkTemplateLocation=false
---
# Source: keycloak-pep/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak-pep
  labels:
    helm.sh/chart: keycloak-pep-1.0.0
    app.kubernetes.io/name: keycloak-pep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v18-1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: keycloak-pep
    app.kubernetes.io/instance: release-name
---
# Source: keycloak-pep/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-pep
  labels:
    helm.sh/chart: keycloak-pep-1.0.0
    app.kubernetes.io/name: keycloak-pep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v18-1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak-pep
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configMap: 17205e771a5cd45b6bed4495c2ebbbb2b54368a3a2b3e387cd2f1c9b2af4a666
      labels:
        app.kubernetes.io/name: keycloak-pep
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: keycloak-pep
          image: "docker.io/hopu/keycloak-rest-pep:v18-1.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - result=$(curl -s -i localhost:8080 | head -1 | cut -d" " -f2) && [ "$result" = "403" ]
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - result=$(curl -s -i localhost:8080 | head -1 | cut -d" " -f2) && [ "$result" = "403" ]
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits:
              cpu: 1
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 300Mi
          volumeMounts:
            - name: app-config
              mountPath: "/deployments/application.properties"
              readOnly: true
              subPath: application.properties
      volumes:
        - name: app-config
          configMap:
            name: keycloak-pep-config
